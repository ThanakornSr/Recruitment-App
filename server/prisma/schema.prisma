generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Applicant {
  id              Int           @id @default(autoincrement())
  fullName        String
  email           String        @unique
  phone           String?
  position        String
  status          String        @default("PENDING")
  photoPath       String?
  cvPath          String?
  coverLetterPath String?
  notes           String?
  appliedAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  updatedBy       String?
  applications    Application[]
  createdBy       User?         @relation(fields: [createdById], references: [id])
  createdById     Int?

  @@map("WSAT_applicants")
  @@index([status])
  @@index([email])
}

model Application {
  id          Int       @id @default(autoincrement())
  applicant   Applicant @relation(fields: [applicantId], references: [id])
  applicantId Int
  status      String    @default("PENDING")
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("applications")
}

model UserSession {
  id           Int       @id @default(autoincrement())
  userId       Int
  accessToken  String    @unique
  userAgent    String?
  ipAddress    String?
  isActive     Boolean   @default(true)
  loginAt      DateTime  @default(now())
  logoutAt     DateTime?
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt    DateTime
  updatedAt    DateTime  @updatedAt

  @@map("user_sessions")
  @@index([accessToken])
  @@index([userId])
}

model User {
  id                Int            @id @default(autoincrement())
  email             String         @unique
  passwordHash      String
  role              UserRole       @default(ADMIN)
  firstName         String?
  lastName          String?
  phoneNumber       String?
  isActive          Boolean        @default(true)
  lastLogin         DateTime?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  sessions          UserSession[]
  createdApplicants Applicant[]

  @@map("WSAT_User")
  @@index([email])
}

enum UserRole {
  ADMIN
  RECRUITER
  INTERVIEWER
}

enum DefaultStatus {
  PENDING
  WAIT_RESULT
  PASS_INTERVIEW
  REJECT_INTERVIEW
  REJECT
}
